% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/outbreaker.R
\name{outbreaker}
\alias{outbreaker}
\title{Outbreaker2: disease outbreak reconstruction using epidemiological and genetic data}
\usage{
outbreaker(dates, dna = NULL, w.dens, f.dens = w.dens,
  config = outbreaker.config())
}
\arguments{
\item{dates}{a vector indicating the collection dates, provided either as
integer numbers or in a usual date format such as \code{Date} or
\code{POSIXct} format. By convention, zero will indicate the oldest date.}

\item{dna}{the DNA sequences in \code{DNAbin} format (see
\code{\link[ape]{read.dna}} in the ape package); this can be imported from a
fasta file (extension .fa, .fas, or .fasta) using \code{adegenet}'s function
\link[adegenet]{fasta2DNAbin}.}

\item{w.dens}{a vector of numeric values indicating the generation time
distribution, reflecting the infectious potential of a case t=0, 1, 2, ...
time steps after infection. By convention, w.dens[1]=0, meaning that an
newly infected patient cannot be instantaneously infectious. If not
standardized, this distribution is rescaled to sum to 1.}

\item{f.dens}{similar to \code{w.dens}, except that this is the distribution
of the colonization time, i.e. time interval during which the pathogen can
be sampled from the patient.}

\item{config}{a set of settings as returned by \code{\link{outbreaker.config}}}
}
\description{
Outbreaker2: disease outbreak reconstruction using epidemiological and genetic data
}
\examples{
\dontrun{

## EXAMPLE USING TOYOUTBREAK ##
## LOAD DATA, SET RANDOM SEED
data(fakeOutbreak)
attach(fakeOutbreak)

## VISUALIZE DYNAMICS
matplot(dat$dynam, type="o", pch=20, lty=1,
   main="Outbreak dynamics", xlim=c(0,28))
legend("topright", legend=c("S","I","R"), lty=1, col=1:3)

## VISUALIZE TRANSMISSION TREE
plot(dat, annot="dist", main="Data - transmission tree")
mtext(side=3, "arrow annotations are numbers of mutations")


\dontrun{
## RUN OUTBREAKER - PARALLEL VERSION
## (takes < 1 min))
set.seed(1)
res <-  outbreaker.parallel(n.runs=4, dna=dat$dna,
   dates=collecDates,w.dens=w, n.iter=5e4)
}


## ASSESS CONVERGENCE OF CHAINS
plotChains(res)
plotChains(res, burnin=2e4)

## REPRESENT POSTERIOR ANCESTRIES
transGraph(res, annot="", main="Posterior ancestries", thres=.01)

## GET CONSENSUS ANCESTRIES
tre <- get.tTree(res)
plot(tre, annot="", main="Consensus ancestries")

## SHOW DISCREPANCIES
col <- rep("lightgrey", 30)
col[which(dat$ances != tre$ances)] <- "pink"
plot(tre, annot="", vertex.color=col, main="Consensus ancestries")
mtext(side=3, text="cases with erroneous ancestries in pink")

## GET EFFECTIVE REPRODUCTION OVER TIME
get.Rt(res)

## GET INDIVIDUAL EFFECTIVE REPRODUCTION
head(get.R(res))
boxplot(get.R(res), col="grey", xlab="Case",
        ylab="Effective reproduction number")

## GET MUTATION RATE PER TIME UNIT
## per genome
head(get.mu(res))

## per nucleotide
mu <- get.mu(res, genome.size=1e4)
head(mu)

summary(mu)
hist(mu, border="lightgrey", col="grey", xlab="Mutation per day and nucleotide",
     main="Posterior distribution of mutation rate")

detach(fakeOutbreak)

}
}
\author{
Thibaut Jombart (\email{t.jombart@imperial.ac.uk})
}
\references{
Jombart T, Cori A, Didelot X, Cauchemez S, Fraser C and Ferguson
N (2014).  Bayesian reconstruction of disease outbreaks by combining
epidemiologic and genomic data. PLoS Computational Biology.
}
\seealso{
\code{outbreaker.data} to process input data, and \code{outbreaker.config} to process/set up parameters

outbreaker.config to see default parameters / set parameters
}

